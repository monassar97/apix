<?php
    
    class Post{
     private $conn;
     //private $table='parents';
        
        
     /*public $id;
     public $name;
     public $password;
     public $address;
     public $phone;
     public $student_id;
     public $national_id;
     public $created_at;
     public $updated_at;
      */
    
     public function __construct($db){
        $this->conn=$db;
    }
    //read all parents
     public function readParent(){
        $query='SELECT
        id ,
        name,
        password,
        address,
        phone,
        student_id,
        national_id,
        created_at,
        updated_at
        FROM school.parents';
        //prepare statment
        $stmt=$this->conn->prepare($query);
        
        //Ececute query
        $stmt->execute();
        
        return $stmt;
    }
        
        
        //read single parent
        public function readSingleParent(){
            $query='SELECT
            id ,
            name,
            password,
            address,
            phone,
            student_id,
            national_id,
            created_at,
            updated_at
            FROM school.parents
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->name=$row['name'];
            $this->password=$row['password'];
            $this->address=$row['address'];
            $this->phone=$row['phone'];
            $this->student_id=$row['student_id'];
            $this->national_id=$row['national_id'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        //read student
        
        public function readStudent(){
            $query='SELECT
            id ,
            name,
            gender,
            age,
            class_id,
            created_at,
            updated_at
            FROM school.students';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        //read single student
        public function readSingleStudent(){
            $query='SELECT
            id ,
            name,
            gender,
            age,
            class_id,
            created_at,
            updated_at
            FROM school.students
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->name=$row['name'];
            $this->gender=$row['gender'];
            $this->age=$row['age'];
            $this->class_id=$row['class_id'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        
        public function readTeacher(){
            $query='SELECT
            id ,
            name,
            username,
            password,
            gender,
            phone,
            email,
            school_id,
            created_at,
            updated_at
            FROM school.teacher';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        //read single teacher
        public function readSingleTeacher(){
            $query='SELECT
            id ,
            name,
            username,
            password,
            gender,
            phone,
            email,
            school_id,
            created_at,
            updated_at
            FROM school.teacher
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->name=$row['name'];
            $this->username=$row['username'];
            $this->password=$row['password'];
            $this->gender=$row['gender'];
            $this->phone=$row['phone'];
            $this->email=$row['email'];
            $this->school_id=$row['school_id'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        //rad schools
        public function readSchools(){
            $query='SELECT
            id ,
            name,
            address,
            phone,
            national_id,
            created_at,
            updated_at
            FROM school.schools';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        //read single school
        public function readSingleSchool(){
            $query='SELECT
            id ,
            name,
            address,
            phone,
            national_id,
            created_at,
            updated_at
            FROM school.schools
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->name=$row['name'];
            $this->address=$row['address'];
            $this->phone=$row['phone'];
            $this->national_id=$row['national_id'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        //read notifications
        public function readNotifications(){
            $query='SELECT
            id,
            teacher_id,
            student_id,
            parent_id,
            title,
            content,
            opened,
            general,
            created_at,
            updated_at
            FROM school.notification';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        //read single school
        public function readSingleNotification(){
            $query='SELECT
            id,
            teacher_id,
            student_id,
            parent_id,
            title,
            content,
            opened,
            general,
            created_at,
            updated_at
            FROM school.notification
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->teacher_id=$row['teacher_id'];
            $this->student_id=$row['student_id'];
            $this->parent_id=$row['parent_id'];
            $this->title=$row['title'];
            $this->content=$row['content'];
            $this->opened=$row['opened'];
            $this->general=$row['general'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        
        public function readMigrations(){
            $query='SELECT
            id ,
            migration,
            batch
            FROM school.migrations';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        //read classes
        public function readClasses(){
            $query='SELECT
            id,
            topic,
            school_id,
            teacher_id,
            created_at,
            updated_at
            FROM school.class';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        public function readSingleClass(){
            $query='SELECT
            id,
            topic,
            school_id,
            teacher_id,
            created_at,
            updated_at
            FROM school.class
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->topic=$row['topic'];
            $this->school_id=$row['school_id'];
            $this->teacher_id=$row['teacher_id'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        
        
        //read admins
        public function readAdmin(){
            $query='SELECT
            id,
            username,
            password,
            privileges,
            created_at,
            updated_at
            FROM school.admin';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            //Ececute query
            $stmt->execute();
            
            return $stmt;
        }
        
        public function readSingleAdmin(){
            $query='SELECT
            id,
            username,
            password,
            privileges,
            created_at,
            updated_at
            FROM school.admin
            where id=?
            Limit 0,1';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            
            
            //Bind ID
            $stmt->bindparam(1,$this->id);
            //Ececute query
            $stmt->execute();
            
            $row=$stmt->fetch(PDO::FETCH_ASSOC);
            
            //set properties
            $this->id=$row['id'];
            $this->username=$row['username'];
            $this->password=$row['password'];
            $this->privileges=$row['privileges'];
            $this->created_at=$row['created_at'];
            $this->updated_at=$row['updated_at'];
            
            //return $stmt;
        }
        //create admin
        public function createAdmin(){
           // $stmt=$this->conn->prepare("USE school;");
           //$stmt->execute();
            $query='INSERT INTO school.admin
            (username,password,privileges)
            values(
            :username,
            :password,
            :privileges)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->privileges=htmlspecialchars(strip_tags($this->privileges));
            
            
            //Bind data

            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':privileges',$this->privileges);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        //create class
        
        public function createClass(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.class
            (topic,school_id,teacher_id)
            values(
                   :topic,
                   :school_id,
                   :teacher_id)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->topic=htmlspecialchars(strip_tags($this->topic));
            $this->school_id=htmlspecialchars(strip_tags($this->school_id));
            $this->teacher_id=htmlspecialchars(strip_tags($this->teacher_id));
            
            
            //Bind data
            
            $stmt->bindparam(':topic',$this->topic);
            $stmt->bindparam(':school_id',$this->school_id);
            $stmt->bindparam(':teacher_id',$this->teacher_id);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        //create notification
        public function createNotification(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.notification
            (teacher_id,student_id,parent_id,class_id,title,content,opened,general)
            values(
                   :teacher_id,
                   :student_id,
                   :parent_id,
                   :class_id,
                   :title,
                   :content,
                   :opened,
                   :general)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->teacher_id=htmlspecialchars(strip_tags($this->teacher_id));
            $this->student_id=htmlspecialchars(strip_tags($this->student_id));
            $this->parent_id=htmlspecialchars(strip_tags($this->parent_id));
            $this->class_id=htmlspecialchars(strip_tags($this->class_id));
            $this->title=htmlspecialchars(strip_tags($this->title));
            $this->content=htmlspecialchars(strip_tags($this->content));
            $this->opened=htmlspecialchars(strip_tags($this->opened));
            $this->general=htmlspecialchars(strip_tags($this->general));
            
            
            //Bind data
            
            $stmt->bindparam(':teacher_id',$this->teacher_id);
            $stmt->bindparam(':student_id',$this->student_id);
            $stmt->bindparam(':parent_id',$this->parent_id);
            $stmt->bindparam(':class_id',$this->class_id);
            $stmt->bindparam(':title',$this->title);
            $stmt->bindparam(':content',$this->content);
            $stmt->bindparam(':opened',$this->opened);
            $stmt->bindparam(':general',$this->general);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        //create student
        public function createStudent(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.students
            (name,gender,grade,age,class_id)
            values(
                   :name,
                   :gender,
                   :grade,
                   :age,
                   :class_id
                   )';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->gender=htmlspecialchars(strip_tags($this->gender));
            $this->grade=htmlspecialchars(strip_tags($this->grade));
            $this->age=htmlspecialchars(strip_tags($this->age));
            $this->class_id=htmlspecialchars(strip_tags($this->class_id));

            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':gender',$this->gender);
            $stmt->bindparam(':grade',$this->grade);
            $stmt->bindparam(':age',$this->age);
            $stmt->bindparam(':class_id',$this->class_id);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        //create teacher
        public function createTeacher(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.teacher
            (name,username,password,gender,phone,email,school_id)
            values(
                   :name,
                   :username,
                   :password,
                   :gender,
                   :phone,
                   :email,
                   :school_id)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->gender=htmlspecialchars(strip_tags($this->gender));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->email=htmlspecialchars(strip_tags($this->email));
            $this->school_id=htmlspecialchars(strip_tags($this->school_id));
            
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':gender',$this->gender);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':email',$this->email);
            $stmt->bindparam(':school_id',$this->school_id);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        //create parent
        public function createParent(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.parents
            (name,username,password,address,phone,student_id,national_id)
            values(
                   :name,
                   :username,
                   :password,
                   :address,
                   :phone,
                   :student_id,
                   :national_id)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->address=htmlspecialchars(strip_tags($this->address));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->student_id=htmlspecialchars(strip_tags($this->student_id));
            $this->national_id=htmlspecialchars(strip_tags($this->national_id));
            
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':address',$this->address);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':student_id',$this->student_id);
            $stmt->bindparam(':national_id',$this->national_id);
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        //create school
        public function createSchool(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='INSERT INTO school.schools
            (name,address,phone,national_id)
            values(
                   :name,
                   :address,
                   :phone,
                   :national_id)';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->address=htmlspecialchars(strip_tags($this->address));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->national_id=htmlspecialchars(strip_tags($this->national_id));
            
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':address',$this->address);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':national_id',$this->national_id);
            
            //Execute query
            
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            
            printf("Error:%s.\n",$stmt->error);
            
            return false;
        }
        
        public function updateAdmin(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.admin
            SET
                  username=:username,
                  password=:password,
                  privileges=:privileges
            WHERE
                  id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->privileges=htmlspecialchars(strip_tags($this->privileges));
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':privileges',$this->privileges);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
            
        }
        
        public function updateClass(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.class
            SET
            topic=:topic,
            school_id=:school_id,
            teacher_id=:teacher_id
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->topic=htmlspecialchars(strip_tags($this->topic));
            $this->school_id=htmlspecialchars(strip_tags($this->school_id));
            $this->teacher_id=htmlspecialchars(strip_tags($this->teacher_id));
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':topic',$this->topic);
            $stmt->bindparam(':school_id',$this->school_id);
            $stmt->bindparam(':teacher_id',$this->teacher_id);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
            
        }
        
        public function updateNotification(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.notification
            SET
            teacher_id=:teacher_id,
            student_id=:student_id,
            parent_id=:parent_id,
            class_id=:class_id,
            title=:title,
            content=:content,
            opened=:opened,
            general=:general
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->teacher_id=htmlspecialchars(strip_tags($this->teacher_id));
            $this->student_id=htmlspecialchars(strip_tags($this->student_id));
            $this->parent_id=htmlspecialchars(strip_tags($this->parent_id));
            $this->class_id=htmlspecialchars(strip_tags($this->class_id));
            $this->title=htmlspecialchars(strip_tags($this->title));
            $this->content=htmlspecialchars(strip_tags($this->content));
            $this->opened=htmlspecialchars(strip_tags($this->opened));
            $this->general=htmlspecialchars(strip_tags($this->general));
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':teacher_id',$this->teacher_id);
            $stmt->bindparam(':student_id',$this->student_id);
            $stmt->bindparam(':parent_id',$this->parent_id);
            $stmt->bindparam(':class_id',$this->class_id);
            $stmt->bindparam(':title',$this->title);
            $stmt->bindparam(':content',$this->content);
            $stmt->bindparam(':opened',$this->opened);
            $stmt->bindparam(':general',$this->general);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
            
        }
        
        public function updateParent(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.parents
            SET
            name=:name,
            username=:username,
            password=:password,
            address=:address,
            phone=:phone,
            student_id=:student_id,
            national_id=:national_id
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->address=htmlspecialchars(strip_tags($this->address));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->student_id=htmlspecialchars(strip_tags($this->student_id));
            $this->national_id=htmlspecialchars(strip_tags($this->national_id));
            
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':address',$this->address);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':student_id',$this->student_id);
            $stmt->bindparam(':national_id',$this->national_id);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
            
        }
        
        public function updateSchool(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.schools
            SET
            name=:name,
            address=:address,
            phone=:phone,
            national_id=:national_id
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->address=htmlspecialchars(strip_tags($this->address));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->national_id=htmlspecialchars(strip_tags($this->national_id));
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':address',$this->address);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':national_id',$this->national_id);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            
        }
        
        public function updateStudent(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.students
            SET
            name=:name,
            gender=:gender,
            grade=:grade,
            age=:age,
            class_id=:class_id
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->gender=htmlspecialchars(strip_tags($this->gender));
            $this->grade=htmlspecialchars(strip_tags($this->grade));
            $this->age=htmlspecialchars(strip_tags($this->age));
            $this->class_id=htmlspecialchars(strip_tags($this->class_id));
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':gender',$this->gender);
            $stmt->bindparam(':grade',$this->grade);
            $stmt->bindparam(':age',$this->age);
            $stmt->bindparam(':class_id',$this->class_id);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            
        }
        
        public function updateTeacher(){
            // $stmt=$this->conn->prepare("USE school;");
            //$stmt->execute();
            $query='Update school.teacher
            SET
            name=:name,
            username=:username,
            password=:password,
            gender=:gender,
            phone=:phone,
            email=:email,
            school_id=:school_id
            WHERE
            id =:id';
            //prepare statment
            $stmt=$this->conn->prepare($query);
            //clean data
            $this->name=htmlspecialchars(strip_tags($this->name));
            $this->username=htmlspecialchars(strip_tags($this->username));
            $this->password=htmlspecialchars(strip_tags($this->password));
            $this->gender=htmlspecialchars(strip_tags($this->gender));
            $this->phone=htmlspecialchars(strip_tags($this->phone));
            $this->email=htmlspecialchars(strip_tags($this->email));
            $this->school_id=htmlspecialchars(strip_tags($this->school_id));
            
            $this->id=htmlspecialchars(strip_tags($this->id));
            
            //Bind data
            
            $stmt->bindparam(':name',$this->name);
            $stmt->bindparam(':username',$this->username);
            $stmt->bindparam(':password',$this->password);
            $stmt->bindparam(':gender',$this->gender);
            $stmt->bindparam(':phone',$this->phone);
            $stmt->bindparam(':email',$this->email);
            $stmt->bindparam(':school_id',$this->school_id);
            $stmt->bindparam(':id',$this->id);
            
            
            //Execute query
            if($stmt->execute()){
                return true;
            }
            //print error if exist
            printf("Error:%s.\n",$stmt->error);
            
            return false;
            
        }
        
        
        
    
    }
    
    ?>
